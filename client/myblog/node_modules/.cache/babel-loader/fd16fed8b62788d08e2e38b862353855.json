{"ast":null,"code":"var _jsxFileName = \"/home/dedesyarifudin/Desktop/mernstack/client/myblog/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/santri').then(response => response.json().then(data => setData(data)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.nohp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","data","setData","fetch","then","response","json","map","item","name","nohp","email","_id"],"sources":["/home/dedesyarifudin/Desktop/mernstack/client/myblog/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n\n  const [data,setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/santri').\n    then(response => response.json().\n    then(data => setData(data)))\n  },[])\n  return (\n    <div>\n      {\n        data.map(item => {\n          return <ul key={item._id}>\n            <li>{item.name} </li>\n            <li>{item.nohp}</li>\n            <li>{item.email}</li>\n          </ul> \n        })\n      }\n    </div>\n  )\n    \n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;EACAD,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,8BAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACZH,IAAI,IAAIC,OAAO,CAACD,IAAD,CADH,CADjB;EAGD,CAJQ,EAIP,EAJO,CAAT;EAKA,oBACE;IAAA,UAEIA,IAAI,CAACM,GAAL,CAASC,IAAI,IAAI;MACf,oBAAO;QAAA,wBACL;UAAA,WAAKA,IAAI,CAACC,IAAV;QAAA;UAAA;UAAA;UAAA;QAAA,QADK,eAEL;UAAA,UAAKD,IAAI,CAACE;QAAV;UAAA;UAAA;UAAA;QAAA,QAFK,eAGL;UAAA,UAAKF,IAAI,CAACG;QAAV;UAAA;UAAA;UAAA;QAAA,QAHK;MAAA,GAASH,IAAI,CAACI,GAAd;QAAA;QAAA;QAAA;MAAA,QAAP;IAKD,CAND;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAtBQZ,G;;KAAAA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}